#version: "3.7"

services:
  backend:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
      - db_backup_volume:/app/db:rw
    environment:
      - DJANGO_SETTINGS_MODULE=gym_system.settings
    expose:
      - 8000
    deploy:
      replicas: 3
    command: gunicorn --workers=3 --bind=0.0.0.0:8000 gym_system.wsgi:application

  # unhash in dependant run
  # gym_nginx:
  #   container_name: gym_nginx
  #   build:
  #     context: .
  #     dockerfile: ./docker/nginx/Dockerfile
  #   ports:
  #     - 80:80  # Proxy port for the application
  #     - 443:443
  #   volumes:
  #     - static_volume:/usr/share/nginx/html/static
  #     - media_volume:/usr/share/nginx/html/media
  #     - ./docker/nginx/certbot/conf:/etc/letsencrypt
  #     - ./docker/nginx/certbot/www:/var/www/certbot
  #   depends_on:
  #     - gym_backend
  #     - certbot

  gym_backup:
    container_name: db_backup
    image: alpine
    volumes:
      - db_backup_volume:/app/db  # Access shared SQLite database volume
    entrypoint: sh -c "apk add --no-cache sqlite && mkdir /app/db/db_backup/ && touch /app/db/db_backup/backup.sqlite3 && while true; do sqlite3 /app/db/db.sqlite3 '.backup /app/db/db_backup/backup.sqlite3'; sleep 3600; done"

  # unhash in dependant run
  # certbot:
  #   container_name: certbot
  #   image: certbot/certbot
  #   volumes:
  #     - ./docker/nginx/certbot/conf:/etc/letsencrypt
  #     - ./docker/nginx/certbot/www:/var/www/certbot
  #   entrypoint: /bin/sh -c 'trap exit TERM; while :; do sleep 6h & wait $!; certbot renew; done;'

volumes:
  static_volume: {}
  media_volume: {}
  db_backup_volume: {}  # Persistent volume for SQLite database and backups
